version: '3'
services:
  api-service:
    build:
      context: .
      dockerfile: api-service/Dockerfile
    restart: unless-stopped
    container_name: api-service
    depends_on:
      - data-service
    ports:
      - "3000:3000"
    networks:
      - network

  data-service:
    build:
      context: .
      dockerfile: data-service/Dockerfile
    restart: unless-stopped
    container_name: data-service
    depends_on:
      - mongo
      - redis
      - broker
    ports:
      - ":5050"
    networks:
      - network

  mongo:
    image: 'mongo:latest'
    container_name: mongo
    networks:
      - network
    ports:
      - ":27017"
    volumes:
      - ./data/mongo:/data/db
    env_file: .env
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE:?}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:?}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:?}
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    networks:
      - network
    ports:
      - ":6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - network
    env_file: .env
    environment:
      - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_CLIENT_PORT:?}
      - ZOOKEEPER_TICK_TIME=${ZOOKEEPER_TICK_TIME:?}

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    networks:
      - network
    ports:
      - ":9092"
    depends_on:
      - zookeeper
    env_file: .env
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID:?}
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT:?}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:?}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS:?}
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:?}
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=${KAFKA_TRANSACTION_STATE_LOG_MIN_ISR:?}
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=${KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR:?}

networks:
  network:
    driver: bridge